<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel-cxf="http://camel.apache.org/schema/cxf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd             http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd     http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
    <bean id="getCountryRequest"
        class="io.spring.guides.gs_producing_web_service.GetCountryRequest" />
    <camel-cxf:cxfEndpoint address="http://localhost:8080/ws"
        id="countryDetailsLookup" 
        serviceClass="io.spring.guides.gs_producing_web_service.CountriesPort">
    </camel-cxf:cxfEndpoint>
    <camelContext id="_camelContext1" streamCache="true"
        xmlns="http://camel.apache.org/schema/spring" 
        xmlns:order="http://fabric8.com/examples/order/v7">
        <dataFormats>
            <jaxb id="jaxb" prettyPrint="true" contextPath="io.spring.guides.gs_producing_web_service" />
        </dataFormats>
        <restConfiguration apiContextPath="/api-doc" bindingMode="off" component="servlet" contextPath="/api" enableCORS="true">
            <dataFormatProperty key="prettyPrint" value="true" />
            <apiProperty key="host" value="" />
            <apiProperty key="api.version" value="1.0.0" />
            <apiProperty key="api.title" value="SOAP to REST Proxy" />
            <apiProperty key="api.description" value="Camel Rest Example with Swagger that provides a SOAP to REST proxy service" />
            <apiProperty key="api.contact.name" value="Simon Green" />
        </restConfiguration>
        <rest consumes="application/json" path="/countryDetails"
            produces="application/json">
            <description>Rest service, returns a list of city names given a country name</description>
            <get uri="/{countryName}">
                <description>Find city names by country name</description>
                <param dataType="string"
                    description="The country name required to fetch the its details"
                    name="countryName" type="path" />
                <to uri="direct:countryDetails"/>
            </get>
        </rest>
        <route id="countryDetails">
            <from uri="direct:countryDetails" />
            <removeHeaders pattern="org.restlet.http.headers" />
            <bean ref="getCountryRequest" method="setName(${header.countryName})" />
            <setBody>
                <simple>${ref:getCountryRequest}</simple>
            </setBody>
            <setHeader headerName="operationNamespace" id="_setHeader1">
                <constant>http://spring.io/guides/gs-producing-web-service</constant>
            </setHeader>
            <setHeader headerName="operationName" id="_setHeader2">
                <constant>getCountry</constant>
            </setHeader>
            <to id="_to1" uri="cxf:bean:countryDetailsLookup" />
            <convertBodyTo type="io.spring.guides.gs_producing_web_service.GetCountryResponse" />
            <unmarshal ref="jaxb" />
            <log message="${body}" />
        </route>
    </camelContext>
</beans>
